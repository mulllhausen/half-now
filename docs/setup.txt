these notes explain how the project was setup

set up google cloud firestore in index.html - go to
https://console.firebase.google.com/project/half-now/ > gear icon next to
project name > project settings
scroll down to _your apps_ then _sdk and setup configuration_. copy the cdn code
into index.html

have a look at

https://github.com/firebase/quickstart-js

and

https://github.com/firebase/quickstart-js/blob/master/firestore/README.md

create the repo on github then

$ git clone git@github.com:mulllhausen/half-now.git

$ npm install -g npm@9.2.0
$ npm -g i firebase-tools

$ firebase login
$ cd half-now/

$ firebase init # first time only
# or
$ firebase init hosting


######## #### ########  ######## ########     ###     ######  ########
##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
######    ##  ########  ######   ########  #########  ######  ######
##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

.../half-now

Before we get started, keep in mind:

* You are currently outside your home directory

Which Firebase features do you want to set up for this directory?
Press Space to select features, then Enter to confirm your choices.
i choose all (<a><enter>)
Realtime Database: Configure a security rules file for Realtime Database and
(optionally) provision default instance,
Firestore: Configure security rules and indexes files for Firestore,
Functions: Configure a Cloud Functions directory and its files,
Hosting: Configure files for Firebase Hosting and (optionally) set up GitHub
Action deploys,
Hosting: Set up GitHub Action deploys,
Storage: Configure a security rules file for Cloud Storage,
Emulators: Set up local emulators for Firebase products,
Remote Config: Configure a template file for Remote Config

=== Project Setup

First, let's associate this project directory with a Firebase project.
You can create multiple project aliases by running firebase use --add,
but for now we'll just set up a default project.

Please select an option: Use an existing project

Select a default Firebase project for this directory: half-now (half-now)
Using project half-now (half-now)

=== Database Setup
  database: ensuring required API firebasedatabase.googleapis.com is enabled...
  database: required API firebasedatabase.googleapis.com is enabled

Firebase Realtime Database Security Rules allow you to define how your data
should be structured and when your data can be read from and written to.

What file should be used for Realtime Database Security Rules? database.rules.json
Database Rules for half-now-default-rtdb have been written to database.rules.json.
Future modifications to database.rules.json will update Realtime Database
Security Rules when you run firebase deploy.

=== Firestore Setup

Firestore Security Rules allow you to define how and when to allow requests. You
can keep these rules in your project directory and publish them with firebase
deploy.

What file should be used for Firestore Rules? firestore.rules

Firestore indexes allow you to perform complex queries while maintaining
performance that scales with the size of the result set. You can keep index
definitions in your project directory and publish them with firebase deploy.

What file should be used for Firestore indexes? firestore.indexes.json

=== Functions Setup
Let's create a new codebase for your functions.
A directory corresponding to the codebase will be created in your project with
sample code pre-configured.

See https://firebase.google.com/docs/functions/organize-functions for more
information on organizing your functions using codebases.

Functions can be deployed with firebase deploy.

What language would you like to use to write Cloud Functions? TypeScript
Do you want to use ESLint to catch probable bugs and enforce style? Yes
  Wrote functions/package.json
  Wrote functions/.eslintrc.js
  Wrote functions/tsconfig.json
  Wrote functions/tsconfig.dev.json
  Wrote functions/src/index.ts
  Wrote functions/.gitignore

Do you want to install dependencies with npm now? Yes
npm WARN EBADENGINE Unsupported engine {
npm WARN EBADENGINE   package: undefined,
npm WARN EBADENGINE   required: { node: '16' },
npm WARN EBADENGINE   current: { node: 'v18.8.0', npm: '9.2.0' }
npm WARN EBADENGINE }

added 400 packages, and audited 401 packages in 1m

81 packages are looking for funding

run `npm fund` for details

5 vulnerabilities (1 moderate, 4 high)

To address all issues (including breaking changes), run:

npm audit fix --force

Run `npm audit` for details.

=== Hosting Setup

Your public directory is the folder (relative to your project directory) that
will contain Hosting assets to be uploaded with firebase deploy. If you
have a build process for your assets, use your build's output directory.

What do you want to use as your public directory? public

Configure as a single-page app (rewrite all urls to /index.html)? No

Set up automatic builds and deploys with GitHub? Yes
  Wrote public/404.html
  Wrote public/index.html

Detected a .git folder at /mnt/c/.projects/half-now
Authorizing with GitHub to upload your service account to a GitHub repository's secrets store.

Visit this URL on this device to log in:
https://github.com/login/oauth/authorize?client_id=xxxxxxxxxxxxxxxxxxxx&state=xxxxxxxxx&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo

Waiting for authentication...

Success! Logged into GitHub as mulllhausen

For which GitHub repository would you like to set up a GitHub workflow? (format: user/repository) mulllhausen/half-now

Created service account github-action-xxxxxxxxx with Firebase Hosting admin permissions.
Uploaded service account JSON to GitHub as secret FIREBASE_SERVICE_ACCOUNT_HALF_NOW.
You can manage your secrets at https://github.com/mulllhausen/half-now/settings/secrets.

Set up the workflow to run a build script before every deploy? Yes
What script should be run before every deploy? npm ci && npm run build
Created workflow file /mnt/c/.projects/half-now/.github/workflows/firebase-hosting-pull-request.yml

Set up automatic deployment to your site's live channel when a PR is merged? Yes

What is the name of the GitHub branch associated with your site's live channel? main

Created workflow file /mnt/c/.projects/half-now/.github/workflows/firebase-hosting-merge.yml

Action required: Visit this URL to revoke authorization for the Firebase CLI GitHub OAuth App:

https://github.com/settings/connections/applications/xxxxxxxxxxxxxxxxxxxx

Action required: Push any new workflow file(s) to your repo

=== Storage Setup

Firebase Storage Security Rules allow you to define how and when to allow
uploads and downloads. You can keep these rules in your project directory and
publish them with firebase deploy.

What file should be used for Storage Rules? storage.rules
  Wrote storage.rules

=== Emulators Setup
Which Firebase emulators do you want to set up? Press Space to select emulators,
then Enter to confirm your choices.
Authentication Emulator,
Functions Emulator,
Firestore Emulator,
Database Emulator,
Hosting Emulator,
Pub/Sub Emulator,
Storage Emulator,
Eventarc Emulator
 Which port do you want to use for the auth emulator? 9099
 Which port do you want to use for the functions emulator? 5001
 Which port do you want to use for the firestore emulator? 8080
 Which port do you want to use for the database emulator? 9000
 Which port do you want to use for the hosting emulator? 5000
 Which port do you want to use for the pubsub emulator? 8085
 Which port do you want to use for the storage emulator? 9199
 Which port do you want to use for the eventarc emulator? 9299
 Would you like to enable the Emulator UI? Yes
 Which port do you want to use for the Emulator UI (leave empty to use any
available port)?
 Would you like to download the emulators now? Yes

  firestore: downloading cloud-firestore-emulator-v1.15.1.jar...
Progress: ======================================================> (100% of 62MB)
  database: downloading firebase-database-emulator-v4.11.0.jar...
Progress: ======================================================> (100% of 35MB)
  pubsub: downloading pubsub-emulator-0.7.1.zip...
Progress: ======================================================> (100% of 66MB)
  storage: downloading cloud-storage-rules-runtime-v1.1.2.jar...
Progress: ======================================================> (100% of 48MB)
  ui: downloading ui-v1.11.1.zip...

=== Remoteconfig Setup
Progress: ======================================================> (100% of 4MB)

What file should be used for your Remote Config template?
remoteconfig.template.json

  Writing configuration info to firebase.json...
  Writing project information to .firebaserc...
  Writing gitignore file to .gitignore...

Firebase initialization complete!

# since there were errors...

$ node -v
v18.8.0

$ nvm -v
0.39.1

$ npm -v
9.2.0              

# we need node version 16...

$ nvm list available
N/A

$ nvm ls-remote
$ nvm install v16.19.0

$ nvm list
->     v16.19.0
       v18.8.0

$ firebase use --add # first time only
$ firebase serve
# it takes about 30 seconds after issuing this command for the server to come up
# then it tells you which dir it is serving from.

# the redirect only seems to allow credentials to be read when using a custom
# domain. i found that when using localhost the user object was null (with v9).
# so update the hosts file:
# 127.0.0.1 half-now.null.place
# then open http://half-now.null.place:5000/login.html

# firebase was complaining that it was not the latest version:
   ╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
   │                                                                                                                     │
   │                                          Update available 11.19.0 → 13.7.5                                          │
   │                                   To update to the latest version using npm, run                                    │
   │                                            npm install -g firebase-tools                                            │
   │   For other CLI management options, visit the CLI documentation (https://firebase.google.com/docs/cli#update-cli)   │
   │                                                                                                                     │
   │                                                                                                                     │
   │                                                                                                                     │
   ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
# so update to the latest version of node first

$ nvm install node
Downloading and installing node v22.0.0...
Downloading https://nodejs.org/dist/v22.0.0/node-v22.0.0-linux-x64.tar.xz...
########################################################################################################################################################################################################### 100.0%
Computing checksum with sha256sum
Checksums matched!
Now using node v22.0.0 (npm v10.5.1)

$ nvm list
->      v22.0.0
         system

# it looks like this also installed a later version of npm.
# try updating npm to the latest anyway
$ npm install -g npm@latest
removed 17 packages, and changed 49 packages in 2s
24 packages are looking for funding
  run `npm fund` for details

# now i can install the latest firebase-tools

$ npm install -g firebase-tools
added 642 packages in 3m
66 packages are looking for funding
  run `npm fund` for details

# to deploy (see firebase.json for what will be deployed):
$ firebase deploy --only hosting
(node:16078) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:16078) [DEP0044] DeprecationWarning: The `util.isArray` API is deprecated. Please use `Array.isArray()` instead.

=== Deploying to 'half-now'...

i  deploying hosting
i  hosting[half-now]: beginning deploy...
i  hosting[half-now]: found 5 files in public-firebase
✔  hosting[half-now]: file upload complete
i  hosting[half-now]: finalizing version...
✔  hosting[half-now]: version finalized
i  hosting[half-now]: releasing new version...
✔  hosting[half-now]: release complete

✔  Deploy complete!

Project Console: https://console.firebase.google.com/project/half-now/overview
Hosting URL: https://half-now.web.app
